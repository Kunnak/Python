import csv
import time
import random

############################################################################################################
############################################################################################################

# Erstellung der CSV-Dateien, Deklarierung der Variablen etc.

password_csv = "password.csv"
backup = 'password_backup.csv'

cache = []

plattform = ''
benutzername = ''
passwort = ''

gesuchtes_passwort = ''

delay = random.randint(1, 7)
############################################################################################################
############################################################################################################


def get_plattform():
    global gesuchtes_passwort
    gesuchtes_passwort = str(input(f"Plattform eingeben oder 'help': "))


def passwort_ausgeben():
    global plattform, benutzername, passwort

    print(f"Suche nach Passwort für '{gesuchtes_passwort}' ...\n")

    time.sleep(delay)

    for row in cache:

        if gesuchtes_passwort.lower() == row[0].lower():
            plattform = row[0]
            benutzername = row[1]
            passwort = row[2]

    print(f"Plattform: {plattform}")
    print(f"Benutzername: {benutzername}")
    print(f"Passwort: {passwort}")

############################################################################################################
############################################################################################################


with open(password_csv, mode='r', newline='') as file:
    reader = csv.reader(file, delimiter=';')

    for row in reader:
        cache.append(row)

print(f"Daten in Cache übertragen!")

with open(backup, mode='w', newline='') as backup:
    writer = csv.writer(backup, delimiter=',')

    for row in cache:
        writer.writerow(row)

print(f"Backup wurde erstellt! \n")

############################################################################################################
############################################################################################################

get_plattform()

if gesuchtes_passwort != 'help':
    passwort_ausgeben()
else:
    for i in cache:
        print(i[0])

    get_plattform()
