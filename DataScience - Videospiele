""" 
------------------------------------------------------------------------------------------------------------------------
    Programm, das die Region, den Hersteller und eine Verkaufsspanne abfragt.
    Anschließend werden die Datensätze innerhalb der Datei durchsucht und bei erfolgreicher Verarbeitung
    ein Balkendiagramm erzeugt, welches die Spiele anzeigt mit den Verkaufszahlen innerhalb der
    ausgewählten Region!
------------------------------------------------------------------------------------------------------------------------    
"""

import csv
import matplotlib.pyplot as plt

data = 'videogames.csv'

regionen = {
    'nordamerika': [],
    'europa': [],
    'japan': [],
    'others': [],
    'global': []
}
spielnamen = []
publisher = []


def extract(file, publisher, sales1, sales2):
    global regionen
    with open(file, 'r') as doc:
        reader = csv.reader(doc)
        next(reader)
        for row in reader:
            if publisher.lower() in row[5].lower() and sales1 < float(row[6]) < sales2:
                spielnamen.append(row[1])
                regionen['nordamerika'].append(float(row[6]))
                regionen['europa'].append(float(row[7]))
                regionen['japan'].append(float(row[8]))
                regionen['others'].append(float(row[9]))
                regionen['global'].append(float(row[10]))


def get_parameters():
    while True:
        search_region = input("Region: ").lower()
        matched_region = None
        for region in regionen:
            if search_region in region:
                matched_region = region
                break
        if matched_region:
            search_region = matched_region
            break
        else:
            print("Ungültige Region. Bitte erneut eingeben.")

    search_publisher = input("Hersteller: ")
    search_low = input("Verkaufszahlen MIN: ")
    search_high = input("Verkaufszahlen MAX: ")

    return search_region, search_publisher, search_low, search_high


with open(data, 'r') as file:
    reader = csv.reader(file)

    for i in reader:
        publisher.append(i[5])

unique_publishers = sorted(set(publisher))

columns = 10

publishers_per_column = len(unique_publishers) // columns
remainder = len(unique_publishers) % columns

publisher_columns = []
start_index = 0
for i in range(columns):
    end_index = start_index + publishers_per_column + (1 if i < remainder else 0)
    publisher_columns.append(unique_publishers[start_index:end_index])
    start_index = end_index

for col in zip(*publisher_columns):
    print('|\t|'.join(col))

print("\n")

search_region, search_publisher, search_low, search_high = get_parameters()
extract(data, search_publisher, float(search_low), float(search_high))
plt.figure(figsize=(45, 12))
plt.bar(spielnamen, regionen[search_region.lower()], color='blue')
plt.title(f'Verkaufszahlen in {search_region}')
plt.xlabel('Spiele')
plt.ylabel('Verkaufszahlen in Millionen')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
