'''

------------------------------------------------------------------------------------------------------------------------
                                       #####    PYGAME TUTORIAL   ######
------------------------------------------------------------------------------------------------------------------------

 # PyGame ist gut geeignet für:
    - kleine Spiele
    - Bilder wiederzugeben
    - User-inputs abzufragen
    - Kollisionen zu ermitteln

------------------------------------------------------------------------------------------------------------------------

 # Need to DO's
    1. Pygame initialisieren
        [  # Pygame.init()  ]

    2. Event Loop mit Abbruchbedingung
        [  #  while True:
                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        pygame.quit()
                        exit()                    ]

------------------------------------------------------------------------------------------------------------------------

 # Surfaces
    1. erstelle Surfaces um die auf dem Hintergrund zu platzieren
        [  # SURFACE = pygame.image.load().convert.()  ]
        [  # SURFACE = pygame.Surface(screen.get_size()) ]
          ->  [  # SURFACE.fill((255, 255, 255))  ]

    2. Projizieren der Surfaces
        [  # screen.blit(SURFACE, (X, Y))  ]

------------------------------------------------------------------------------------------------------------------------

# Clock
     1. Erstelle eine Clock, die die Spielgeschwindigkeit steuert
        [  # clock = pygame.time.Clock()  ]

     2. bestimme die Geschwindigkeit
        [  # clock.tick(60)  ]

------------------------------------------------------------------------------------------------------------------------

# Text einfügen:
     1. Schriftart auswählen
        [  # SCHRIFTART = pygame.font.Font(Schriftart, Größe))

     2. Schreiben des Textes auf der Surface
        [  # TEXT SURFACE = SCHRIFTART.render('TEXT', (True, False), 'FARBE').convert()  ]

     3. Projizieren des Textes
        [  # screen.blit(TEXT SURFACE, (X, Y))  ]

------------------------------------------------------------------------------------------------------------------------

# Einfache Animationen:
    - bestimme die Position der Surface, die animiert werden soll
    - lasse die Position mit der Laufzeit des Programmes aktualisieren
    - erstelle ggf. eine Variable, um die X bzw. Y Koordinaten zu bestimmen

    CODES:
        [  # X_pos -+= X  ]
        [  # Y_pos -+= Y  ]

        [  # if schnecke_x_pos = (X, Y):
                    schnecke_x_pos = (X, Y))  ]


------------------------------------------------------------------------------------------------------------------------

# Rectangles

------------------------------------------------------------------------------------------------------------------------

'''


########################################################################################################################
###                                            BEGINN DES PROGRAMMES                                                 ###
########################################################################################################################


import pygame
from sys import exit

pygame.init()

screen = pygame.display.set_mode((800,400))
pygame.display.set_caption("Yannicks Game !")
clock = pygame.time.Clock()
test_font = pygame.font.Font('font/Pixeltype.ttf',50)

himmel_surface = pygame.image.load('graphics/Sky.png').convert()
boden_surface = pygame.image.load('graphics/ground.png').convert()
text_surface = test_font.render('My Game', False, 'Black').convert()

schnecke_surface = pygame.image.load('graphics/snail/snail1.png').convert_alpha()
schnecke_x_pos = 600

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()

    screen.blit(himmel_surface, (0,0))
    screen.blit(boden_surface, (0,300))
    screen.blit(text_surface, (300, 50))
    schnecke_x_pos -= 4

    if schnecke_x_pos < 0:
        schnecke_x_pos = 700

        screen.blit(schnecke_surface, (schnecke_x_pos,250))

    screen.blit(schnecke_surface, (schnecke_x_pos,250))

    pygame.display.update()
    clock.tick(60)
